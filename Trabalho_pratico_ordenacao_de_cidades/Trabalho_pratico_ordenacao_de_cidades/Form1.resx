<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="Fechar.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAACAAAAAgCAYAAABzenr0AAAABGdBTUEAALGPC/xhBQAAACBjSFJNAAB6
        JgAAgIQAAPoAAACA6AAAdTAAAOpgAAA6mAAAF3CculE8AAAACXBIWXMAAA3XAAAN1wFCKJt4AAAAB3RJ
        TUUH4QsMFxUW9sIKngAAABl0RVh0U29mdHdhcmUAd3d3Lmlua3NjYXBlLm9yZ5vuPBoAAAE9SURBVFhH
        7Ze7SgNBGEYj2mtpETtFH8LCFzCFtQ9iaWkj2HlDsIoJiX3eQqwVLLzUgo3a6Pl2Hdgdd+LCvzOskAMn
        zA6E/7A7gWwHJondxRJfeIh7CbzFfSyhgI18GZ0Btj9gEZcieY0H3t6vgFfUXiqzDz9gB5cju4nBgK18
        GRXNnAXMAv5vwBEWv+PTxeN8GcQUcIovuJ5dldHwOxxmV2FMAXN4js+4po0fisMXtDEFU4BQhO6EIlbR
        Db/CefwLc4BQxAk+4T32sc5w0UiAWME3/MCqMxGikQB320d4gY+ox1EHc0BxuA6cO5h1I0wB/nCHO5h1
        IkwBN+gPd7iD+ZBdhTEFbOO037kievkyiCmgCdoVcIb6tyrfMWnApecnJg3wSf4IfFoRoDNR9XLZpHoh
        rgwYY9VrdQQ7k28jyd/DXLlUswAAAABJRU5ErkJggg==
</value>
  </data>
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        CIiAiIgIiICIiAiIgIiICIiAiIgf/9k=
</value>
  </data>
</root>